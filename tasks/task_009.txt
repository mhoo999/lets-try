# Task ID: 9
# Title: Web Share API 연동
# Status: pending
# Dependencies: 8
# Priority: medium
# Description: Add functionality to share the generated image using the Web Share API and provide fallback options for unsupported browsers.
# Details:
1. Implement Web Share API integration for supported browsers
2. Create fallback sharing options (download, copy link, etc.)
3. Design a sharing UI with various options
4. Handle platform-specific sharing behaviors

Example implementation:
```tsx
export async function shareImage(imageUrl: string, title: string = 'My Ring Try-On') {
  // Check if Web Share API is supported
  if (navigator.share) {
    try {
      // Convert data URL to Blob for sharing
      const response = await fetch(imageUrl)
      const blob = await response.blob()
      const file = new File([blob], 'ring-try-on.jpg', { type: 'image/jpeg' })
      
      await navigator.share({
        title: title,
        text: 'Check out these rings I tried on with haime lets try!',
        files: [file]
      })
      
      return { success: true }
    } catch (error) {
      console.error('Error sharing:', error)
      return { success: false, error }
    }
  } else {
    // Fallback for browsers that don't support Web Share API
    // Trigger download
    const link = document.createElement('a')
    link.href = imageUrl
    link.download = 'ring-try-on.jpg'
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
    
    return { success: true, method: 'download' }
  }
}
```

# Test Strategy:
Test sharing functionality across different browsers and devices. Verify that the Web Share API works correctly on supported platforms. Test fallback options on unsupported browsers. Ensure that shared images maintain quality and include proper branding.
